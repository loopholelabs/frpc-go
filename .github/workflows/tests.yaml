name: Tests

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: Go Build Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}

      - name: Go Mod Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}

      - uses: actions/checkout@v3
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
      - name: Install protoc-gen plugin
        working-directory: ./protoc-gen-go-frpc
        run: go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
      - name: Install frpc plugin for protoc-gen
        working-directory: ./
        run: go install ./protoc-gen-go-frpc
      - name: Run generator
        working-directory: ./examples/test
        run: protoc --go-frpc_out=../../pkg/generator test.proto
      - name: Test
        run: go test -v ./...
  tests-race:
    runs-on: ubuntu-latest
    steps:
      - id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: Go Build Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}

      - name: Go Mod Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}

      - name: Install Protoc
        uses: arduino/setup-protoc@v1
      - name: Install protoc-gen plugin
        working-directory: ./protoc-gen-go-frpc
        run: go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
      - name: Install frpc plugin for protoc-gen
        working-directory: ./
        run: go install ./protoc-gen-go-frpc
      - name: Run generator
        working-directory: ./examples/test
        run: protoc --go-frpc_out=../../pkg/generator test.proto

      - name: Test with Race Conditions
        run: go test -race -v ./...
        timeout-minutes: 15
